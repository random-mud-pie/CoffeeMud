#!QUESTMAKER_START_SCRIPT Normal Mystery #1
#A 3-Level mystery where players must question existing mobs from your world to
#discover WHO did something, what ITEM they did it with, and what their MOTIVE was.
#The suspects and witnesses are existing mobs and items are CREATED by you.
#
#!QUESTMAKER_PAGE Quest Name/Criteria
#Enter the unique name and player criteria for your new quest.
#
#Quest ID:
#Enter a unique name/id for your quest:
#$QUEST_ID=$UNIQUE_QUEST_NAME=normal_mystery_1
#
#Quest Name:
#Enter a friendly displayable name for your quest:
#$QUEST_NAME=$STRING=Normal Mystery #1
#
#Quest-Player Criterium:
#You may leave this entry blank, or enter a Zapper Mask to describe what
#kinds of players may participate in this quest.  You can use this to set
#race, level, or other requirements.
#$QUEST_CRITERIA=$ZAPPERMASK
#
#!QUESTMAKER_PAGE Specify the Announcer
#The Announcer is the mob who will be announcing the quest initially. This must
#be an existing mob in your world.  They will announce the quest to players
#once, and then mark whether the player says they accept the quest.
#
#Announcer Area/Room: 
#Specify below the name of the area that your Announcer mob will be located
#in and/or the room in which the mob can be found.  You may leave both blank
#to force the quest manager to find the mob somewhere in the world, but this
#will hurt the performance of your mud, so use with care.
#Use double-quotes around multi-word areas and room ids/names.
#  
#Announcer Area:
#$ANNOUNCER_AREA=($AREA)
#Announcer Room ID:
#$ANNOUNCER_ROOM=($ROOMID)
#
#Announcer mob name: 
#Specify the name of the mob who will act as the Announcer mob.  
#Use double-quotes around multi-word names.
#If you specified an area or room above, then the mob must be located there.
#You may optionally have the quest manager select a 'random' mob by entering
#a mob name of ANY MASK= followed by a Zapper Mask (see help on 
#ZAPPERMASKS for information on zapper mask syntax).
#Remember, if the quest manager can not find your mob, the quest will not
#be started.
#$ANNOUNCER_NAME=$NAME
#
#!QUESTMAKER_PAGE Announcer greetings/instructions
#Here's where you specify any special text said by the announcer regarding
#your quest
#
#Announcer greeting: 
#Specify what the announcer says to people when they enter the room about their
#quest.   Use the code ${2 *} to designate the name of the mob to find.
#$QUEST_NOTIFYSTRING=$LONG_STRING=I need someone to find ${2 *} somewhere.
#
#Announcer instructions: 
#Specify what the announcer says to people who have accepted the quest.  This 
#should give some details about what is to be done.  You can leave this blank
#if you like.  Use the code ${2 *} to designate the name of the mob to find.
#$QUEST_INSTRUCTIONSSTRING=($LONG_STRING)=Find ${2 *} at that one place.  Be careful!
#
#!QUESTMAKER_PAGE Specify the Destination Players
#Specify below the name of the area that your witnesses and suspects will be located.
#Use double-quotes around multi-word areas and room ids/names.
#
#Destination Area:
#$DESTINATION_AREA=($AREA)
#
#!QUESTMAKER_PAGE Quest Completion
#Select some rewards for completing the travel:
#
#Reward items: 
#Specify zero or more items to choose from as a reward 
#$REWARD_ITEMS=$ITEMXML_ZEROORMORE
#
#Quest Point?
#$QUEST_POINT=$CHOOSE=YES,NO
#Amount of money (an amount, or leave blank):
#$GOLD=($EXPRESSION)
#Amount of experience points, blank for none, or a number% for percent of exp to next level:
#$EXP=($STRING)=10%
#
#Player Faction to give to or take from:
#$FACTION=($FACTION)
#If you selected a faction above, enter a new numeric amount, 
#or enter +value to add, or --value to subtract:
#$NUMFACTION=($STRING)
#
#Select whether a player may complete this quest multiple times:
#$MULTIPLE=$CHOOSE=YES,NO
#
#!QUESTMAKER_END_SCRIPT Normal Travel #2

set name $QUEST_ID
set display $QUEST_NAME
set author $#AUTHOR

set wait 1
set interval 1
quiet

set area $ANNOUNCER_AREA
set room $ANNOUNCER_ROOM
set mobgroup
set mob reselect $ANNOUNCER_NAME
give stat keyplayer true
give script LOAD=$QUEST_ID_announcer.script

set area $DESTINATION_AREA
set roomgroup ALL

set duration 0

<?xml version="1.0"?>
<FILE><NAME>$QUEST_ID_rewarditems.xml</NAME><DATA><ITEMS>$REWARD_ITEMS</ITEMS></DATA></FILE>
<FILE><NAME>$QUEST_ID_announcer.script</NAME>
<DATA>
GREET_PROG 100
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and !QUESTSCRIPTED($n *)
		if EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			sayto "$n" $QUEST_NOTIFYSTRING -- just say '^yi accept^?' or '^yi accept $QUEST_NAME^?' to take on this quest.
		endif
	endif
~

SPEECH_PROG p i accept $QUEST_NAME
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and !QUESTSCRIPTED($n *)
		if  EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			mpqset * STATISTICS ACCEPTED
			sayto "$n" $QUEST_INSTRUCTIONSSTRING
			mpscript $n INDIVIDUAL SAVABLE STATIC=LOAD=$QUEST_ID_playertrack.script
		endif
	endif
~

SPEECH_PROG p i accept
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and !QUESTSCRIPTED($n *)
		if  EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			mpqset * STATISTICS ACCEPTED
			sayto "$n" $QUEST_INSTRUCTIONSSTRING
			mpscript $n INDIVIDUAL SAVABLE STATIC=LOAD=$QUEST_ID_playertrack.script
		endif
	endif
~

SPEECH_PROG all
	if STRCONTAINS($g "i accept") OR STRCONTAINS($g "solve") OR EVAL($g == '')
		RETURN
	endif
	
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) and QUESTSCRIPTED($n *)
		if  EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			MPARGSET $9 ''
			IF EVAL($9 == '')
				MPARGSET $3 '$%QVAR(* AGENT)%'
				IF STRCONTAINS($g "$3")
					MPARGSET $9 $g
					if VAR($n $QUEST_ID_AGENT != '')
						sayto $n You've already made a guess on the WHO question.
					else
						MPSETVAR $n $QUEST_ID_AGENT '$%QVAR(* AGENT)%'
						sayto $n Ok, so you think $%QVAR(* AGENT)% did it.
						MPSETVAR $n $QUEST_ID_CORRECT ++
						MPCALLFUNC winner
					endif
				ELSE
					mpargset $0 '$%QVAR(* AGENTGROUP)%'
					for $1 = 1 to $0
						mpargset $2 'AGENTGROUP#$1'
						mpargset $3 '$%QVAR(* $2)%'
						IF STRCONTAINS($g "$3") AND EVAL($9 == '')
							MPARGSET $9 $g
							if VAR($n $QUEST_ID_AGENT != '')
								sayto $n You've already made a guess on the WHO question.
							else
								MPSETVAR $n $QUEST_ID_AGENT '$3'
								sayto $n Ok, so you think $3 did it.
								MPCALLFUNC winner
								BREAK
							endif
						endif
					next
				ENDIF
			ENDIF
			IF EVAL($9 == '')
				MPARGSET $3 '$%QVAR(* TOOL)%'
				IF STRCONTAINS($g "$3")
					MPARGSET $9 $g
					if VAR($n $QUEST_ID_TOOL != '')
						sayto $n You've already made a guess on the WHAT-was-used question.
					else
						MPSETVAR $n $QUEST_ID_TOOL '$%QVAR(* TOOL)%'
						sayto $n Ok, so you think it was done with $%QVAR(* TOOL)%.
						MPSETVAR $n $QUEST_ID_CORRECT ++
						MPCALLFUNC winner
					endif
				ELSE
					mpargset $0 '$%QVAR(* TOOLGROUP)%'
					for $1 = 1 to $0
						mpargset $2 'TOOLGROUP#$1'
						mpargset $3 '$%QVAR(* $2)%'
						IF STRCONTAINS($g "$3") AND EVAL($9 == '')
							MPARGSET $9 $g
							if VAR($n $QUEST_ID_TOOL != '')
								sayto $n You've already made a guess on the WHAT-was-used question.
							else
								MPSETVAR $n $QUEST_ID_TOOL '$3'
								sayto $n Ok, so you think it was done with $3.
								MPCALLFUNC winner
								BREAK
							endif
						endif
					next
				ENDIF
			ENDIF
			IF EVAL($9 == '')
				MPARGSET $3 '$%QVAR(* MOTIVE)%'
				IF STRCONTAINS($g "$3")
					MPARGSET $9 $g
					if VAR($n $QUEST_ID_MOTIVE != '')
						sayto $n You've already made a guess on the MOTIVE question.
					else
						MPSETVAR $n $QUEST_ID_MOTIVE '$%QVAR(* MOTIVE)%'
						sayto $n Ok, so you think the motive was $%QVAR(* MOTIVE)%.
						MPSETVAR $n $QUEST_ID_CORRECT ++
						MPCALLFUNC winner
					endif
				ELSE
					mpargset $0 '$%QVAR(* MOTIVEGROUP)%'
					for $1 = 1 to $0
						mpargset $2 'MOTIVEGROUP#$1'
						mpargset $3 '$%QVAR(* $2)%'
						IF STRCONTAINS($g "$3") AND EVAL($9 == '')
							MPARGSET $9 $g
							if VAR($n $QUEST_ID_MOTIVE != '')
								sayto $n You've already made a guess on the MOTIVE question.
							else
								MPSETVAR $n $QUEST_ID_MOTIVE '$3'
								sayto $n Ok, so you think the motive was $3.
								MPCALLFUNC winner
								BREAK
							endif
						endif
					next
				ENDIF
			ENDIF
		endif
	endif
~

FUNCTION_PROG winner
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n)
		if  EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			if VAR($n $QUEST_ID_CORRECT >= 3)
				if EVAL('$EXP' != '')
					mpexp $n $EXP
				endif
				if EVAL('$FACTION' != '')
					mpfaction $n $FACTION $NUMFACTION
				endif
				if EVAL('$QUEST_POINT' == 'YES') AND !QUESTWINNER($n *)
					mpoload QuestPoint
					give "a quest point" "$n"
				endif
				if EVAL('$GOLD' != '') AND EVAL('$GOLD' > 0)
					mpoload $GOLD
					give $GOLD "$n" 
				endif
				mpoload fromfile $QUEST_ID_rewarditems.xml any
				if EVAL('$b' != '')
					give "$b" "$n"
				endif
				mpsetvar $i $QUEST_ID_REWARDED $n
				mpquestwin $n *
				$SOLVED_RESPONSE_TYPE $SOLVED_RESPONSE_TEXT
				mpendquest $i
				mpqset * STATISTICS SUCCESS
				IF EVAL('$NEXT_QUEST' != '')
					mpstartquest $NEXT_QUEST
				ENDIF
			else
				if VAR($n $QUEST_ID_TOOL != '') AND VAR($n $QUEST_ID_AGENT != '') AND VAR($n $QUEST_ID_MOTIVE != '')
					sayto $n I'm sorry $n, your guess is incorrect.  Try again later.
				endif
			endif
		endif
	endif
~
</DATA></FILE>
<FILE><NAME>$QUEST_ID_destination.script</NAME>
<DATA>
GREET_PROG 100
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) AND QUESTSCRIPTED($n *)
		if  EVAL('$MULTIPLE' != 'YES') AND QUESTWINNER($n *)
		else
			if EVAL('$EXP' != '')
				mpexp $n $EXP
			endif
			if EVAL('$FACTION' != '')
				mpfaction $n $FACTION $NUMFACTION
			endif
			if EVAL('$QUEST_POINT' == 'YES') AND !QUESTWINNER($n *)
				mpoload QuestPoint
				give "a quest point" "$n"
			endif
			if EVAL('$GOLD' != '') AND EVAL('$GOLD' > 0)
				mpoload $GOLD
				give $GOLD "$n"
			endif
			mpoload fromfile $QUEST_ID_rewarditems.xml any
			if EVAL('$b' != '')
				give "$b" "$n"
			endif
			mpquestwin $n *
			sayto $n $DESTINATION_RESPONSE
			mpendquest $n
			mpqset * STATISTICS SUCCESS
		endif
	endif
~
</DATA></FILE>
<FILE><NAME>$QUEST_ID_playertrack.script</NAME>
<DATA>
ONCE_PROG 100
	mpsetvar $i INSTRUCTIONS $QUEST_INSTRUCTIONSSTRING
	IF !isquestmobalive(1 '$QUEST_ID')
		MPENDQUEST '$QUEST_ID'
	ENDIF
~

RAND_PROG 25
	IF !isquestmobalive(1 '$QUEST_ID')
		MPENDQUEST '$QUEST_ID'
	else
		if QVAR(* REMAINING == '')
			MPENDQUEST $i
		else
			mpsetvar $i TIME_REMAINING $%QVAR(* REMAINING)%
		endif
	ENDIF
~

DELAY_PROG 15 60
	MPSETVAR $i ALREADY_SPOKEN_TO
~

DELAY_PROG 150 300
	MPSETVAR $i EVIDENCE_ALREADY_GIVEN
~

FUNC_PROG AskedAboutAgent
~

FUNC_PROG AskedAboutTool
~

FUNC_PROG AskedAboutMotive
~

SPEAK_PROG all
	if STRCONTAINS($g "i accept") OR STRCONTAINS($g "solve") OR EVAL($g == '')
		RETURN
	endif
	if !QUESTAREA('$%INAREA($i)%' *))
		RETURN
	endif
	#
	# would be nice to check to see if there are any mobs in the room who CAN reply first
	#
	mpargset $9 ''
	IF EVAL($9 == '')
		mpargset $0 '$%QVAR(* AGENTGROUP)%'
		for $1 = 1 to $0
			mpargset $2 'AGENTGROUP#$1'
			mpargset $3 '$%QVAR(* $2)%'
			IF STRCONTAINS($g "$3")
				MPCALLFUNC AskedAboutAgent $3
				MPARGSET $9 $g
				BREAK
			endif
		next
	ENDIF
	IF EVAL($9 == '')
		mpargset $0 '$%QVAR(* TOOLGROUP)%'
		for $1 = 1 to $0
			mpargset $2 'TOOLGROUP#$1'
			mpargset $3 '$%QVAR(* $2)%'
			IF STRCONTAINS($g "$3")
				MPCALLFUNC AskedAboutTool $3
				MPARGSET $9 $g
				BREAK
			endif
		next
	ENDIF
	IF EVAL($9 == '')
		mpargset $0 '$%QVAR(* MOTIVEGROUP)%'
		for $1 = 1 to $0
			mpargset $2 'MOTIVEGROUP#$1'
			mpargset $3 '$%QVAR(* $2)%'
			IF STRCONTAINS($g "$3") AND EVAL($9 == '')
				MPARGSET $9 $g
				MPCALLFUNC AskedAboutMotive $3
				MPARGSET $9 $g
				BREAK
			endif
		next
	ENDIF

~

QUEST_TIME_PROG * -1
	MPECHOAT $i The quest "$QUEST_NAME" has ended.
~

QUEST_TIME_PROG * 1
	MPECHOAT $i The quest "$QUEST_NAME" has 1 minute remaining.
~

</DATA></FILE>